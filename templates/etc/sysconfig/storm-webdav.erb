# The contents of this file was generated by Puppet

# Storm webdav service will run as this user
STORM_WEBDAV_USER="storm"

# JVM options
STORM_WEBDAV_JVM_OPTS="<%=@jvm_opts%>"

# StoRM webdav will bind on this address
STORM_WEBDAV_SERVER_ADDRESS="0.0.0.0"

# In order to handle tpc requests, webdav needs to know for which hostnames
# is handling requests (and possibly any alias)
# STORM_WEBDAV_HOSTNAME_0="localhost"
# STORM_WEBDAV_HOSTNAME_1="alias.for.localhost"
<% @hostnames.each_with_index do | hostname, idx | -%>
<%= "STORM_WEBDAV_HOSTNAME_#{idx}=#{hostname}" %>
<% end -%>

# HTTPS connector port
STORM_WEBDAV_HTTPS_PORT=<%=@https_port%>

# HTTP connector port
STORM_WEBDAV_HTTP_PORT=<%=@http_port%>

# Path to the service certificate.
STORM_WEBDAV_CERTIFICATE_PATH="/etc/grid-security/storm-webdav/hostcert.pem"

# Path to the service certificate private key.
STORM_WEBDAV_PRIVATE_KEY_PATH="/etc/grid-security/storm-webdav/hostkey.pem"

# Trust anchors directory
STORM_WEBDAV_TRUST_ANCHORS_DIR="/etc/grid-security/certificates"

# How often (seconds) trust anchors are refreshed from the trust anchors directory
STORM_WEBDAV_TRUST_ANCHORS_REFRESH_INTERVAL=<%=@trust_anchors_refresh_interval%>

# Max concurrent connections
STORM_WEBDAV_MAX_CONNECTIONS=<%=@max_concurrent_connections%>

# Connection queue size
STORM_WEBDAV_MAX_QUEUE_SIZE=<%=@max_queue_size%>

# Connector Maximum idle time (in milliseconds)
STORM_WEBDAV_CONNECTOR_MAX_IDLE_TIME=<%=@connector_max_idle_time%>

# Storage area configuration directory
STORM_WEBDAV_SA_CONFIG_DIR="/etc/storm/webdav/sa.d"

# The webdav server jar. Do not change this unless you know what you are doing.
STORM_WEBDAV_JAR="/usr/share/java/storm-webdav/storm-webdav-server.jar"

# The StoRM webdav logfile. Do not change this unless you know what you are doing.
STORM_WEBDAV_LOG="/var/log/storm/webdav/storm-webdav-server.log"

# The StoRM webdav logging configuration. Do not change this unless you know what you are doing.
STORM_WEBDAV_LOG_CONFIGURATION="/etc/storm/webdav/logback.xml"

# The StoRM webdav access log configuration. Do not change this unless you know what you are doing.
STORM_WEBDAV_ACCESS_LOG_CONFIGURATION="/etc/storm/webdav/logback-access.xml"

# Enables/disables  support for VO map files
STORM_WEBDAV_VO_MAP_FILES_ENABLE="<%=@vo_map_files_enable%>"

# Where StoRM WebDAV should look for voms map files.
STORM_WEBDAV_VO_MAP_FILES_CONFIG_DIR="<%=@vo_map_files_config_dir%>"

# VOMS map files refresh period (in seconds)
STORM_WEBDAV_VO_MAP_FILES_REFRESH_INTERVAL="<%=@vo_map_files_refresh_interval%>"

# StoRM WebDAV server debug option. Uncomment this (and restart the service)
# if you want to attach a java debugger to the running server process
<% if @debug %>
STORM_WEBDAV_DEBUG="y"
<% else %>
# STORM_WEBDAV_DEBUG="y"
<% end %>

# JVM debug port. Used together with STORM_WEBDAV_DEBUG to specify on which
# port the JVM should listen for incoming debugger.
<% if @debug %>
STORM_WEBDAV_DEBUG_PORT=<%=@debug_port%>
<% else %>
# STORM_WEBDAV_DEBUG_PORT=1044
<% end %>

# JVM debug suspend option. Uncomment this to block the process JVM until a remote
# debugger connects to the debugging port specified with the STORM_WEBDAV_DEBUG_PORT
# option
<% if @debug && @debug_suspend%>
STORM_WEBDAV_DEBUG_SUSPEND="y"
<% else %>
# STORM_WEBDAV_DEBUG_SUSPEND="y"
<% end %>

# Max number of active third party copy connections
STORM_WEBDAV_TPC_MAX_CONNECTIONS="<%=@tpc_max_connections%>"

# Proactively verify checksums in third party copy
STORM_WEBDAV_TPC_VERIFY_CHECKSUM="<%=@tpc_verify_checksum%>"

# Enables the OAuth authorization server, used to issue bearer tokens
# to clients presenting a VOMS credential
<% if @authz_server_enable %>
STORM_WEBDAV_AUTHZ_SERVER_ENABLE="<%=@authz_server_enable%>"
<% else %>
# STORM_WEBDAV_AUTHZ_SERVER_ENABLE="false"
<% end %>

# The issuer setting for the token
# Default: https://${STORM_WEBDAV_HOSTNAME_0}:${STORM_WEBDAV_HTTPS_PORT}
<% if @authz_server_enable %>
STORM_WEBDAV_AUTHZ_SERVER_ISSUER="<%=@authz_server_issuer%>"
<% else %>
# STORM_WEBDAV_AUTHZ_SERVER_ISSUER="https://storm.example:8443"
<% end %>

# Maximum token lifetime in seconds
<% if @authz_server_enable %>
STORM_WEBDAV_AUTHZ_SERVER_MAX_TOKEN_LIFETIME_SEC="<%=@authz_server_max_token_lifetime_sec%>"
<% else %>
# STORM_WEBDAV_AUTHZ_SERVER_MAX_TOKEN_LIFETIME_SEC="43200"
<% end %>

# The WebDAV authz server secret
# This secret is used to sign bearer tokens, so if you have multiple
# instances of storm-webdav serving for the same VOs, you should use
# the same secret
# IMPORTANT: set this in production, do not rely on the default random
# value as that will cause problems across service restarts
#
<% if @authz_server_enable %>
STORM_WEBDAV_AUTHZ_SERVER_SECRET="<%=@authz_server_secret%>"
<% else %>
# STORM_WEBDAV_AUTHZ_SERVER_SECRET="areasonablesecretlongerthan256bits"
<% end %>

# Should StoRM WebDAV always require a valid client certificate on the HTTPS endpoint?
# Set to 'false' if you want token-based authentication to work (and thus third-party copy)
STORM_WEBDAV_REQUIRE_CLIENT_CERT="<%=@require_client_cert%>"

# Use Conscrypt JSSE provider?
# Default: false
# Set to 'true' if you want to use a faster TLS implementation which can improve dramatically
# the performance on data transfers. This flag must also set to "true" when HTTP/2 is enabled
STORM_WEBDAV_USE_CONSCRYPT="<%=@use_conscrypt%>"

# Use Conscrypt JSSE provider for TPC client connections?
# Default: false
# Set to 'true' if you want to use a faster TLS implementation which can improve dramatically
# the performance on data transfers. This flag controls the use of Conscrypt for TPC client connections.
STORM_WEBDAV_TPC_USE_CONSCRYPT="<%=@tpc_use_conscrypt%>"

# Enable HTTP/2 support?
# Default: false
# Set to 'true' if you want to enable HTTP/2 (and remember to enable conscrypt too!)
STORM_WEBDAV_ENABLE_HTTP2="<%=@enable_http2%>"