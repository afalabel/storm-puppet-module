# StoRM se_storm_backend configuration file
#
# WARNING: This file is auto-generated by puppet!
# WARNING: To change it, edit the file in [templates/etc/storm/backend-server/storm.properties.erb]
#

# ============================
# StoRM Service DNS
# ============================
# hostname with which the service is published
storm.service.FE-public.hostname = <%= @srm_hostname %>

# ============================
# Front End hosts
# ============================
# comma-separated list of hostnames composing the FE. 
storm.service.FE-list.hostnames =  

# ============================
# Front End service port
# ============================
# The Front End binding port
storm.service.port = <%= @frontend_port %>

# ============================
# Managed SURL endpoints 
# ============================
#
# comma-separated list of managed SURL. 
# These entries are used to check the SURL validity. 
# storm.service.SURL.endpoint = srm://<surl-host>:<surl-port>/<surl-service-path>
# Example: Example: srm://storm.cnaf.infn.it:8444/srm/managerv2
storm.service.SURL.endpoint =   

# ============================
# Managed SURL default ports
# ============================
#
# comma-separated list of managed SURL's defauilt ports. 
# These entries are used to check the SURL validity. 
# storm.service.SURL.default-ports = <surl-port>
# Example: 8444
storm.service.SURL.default-ports =   

# ============================
# FE/BE communication RDBMS
# ============================
#
# Parameters to connect to the DB used as channel for the requests. 
storm.service.request-db.host = <%= @hostname %>
storm.service.request-db.username = <%= @database['storm_username'] %>
storm.service.request-db.passwd = <%= @database['storm_password'] %>

#############################################
############  PROFILE PARAMETERS ############
#############################################
##
## NOTE: 
##  The PROFILE PARAMETERS are not managed by YAIM in any case, 
##  so any change must be managed by directly editing this file.
##

# ============================
# StoRM Service Generic Behavior
# ============================
directory.automatic-creation = <%= @directory_automatic_creation %>
# To enable file creation within directories. Useful when authorization is not defined.              
directory.writeperm = false <%= @directory_writeperm %>


# ============================
# StoRM Service PINNED Behavior
# ============================
# Default PinLifetime in seconds used for pinning files in case of srmPrepareToPut or srmPrapareToGet operation
# without any pinLifetime specified. 
pinLifetime.default=259200
# Maximum allowed value for Pin LifeTime. 
# Values beyond the max will be dropped to max value.
pinLifetime.maximum=1814400


# ============================
# StoRM Service TURL Behavior
# ============================
extraslashes.file=
extraslashes.rfio=
extraslashes.gsiftp=/
extraslashes.root=


# =======================
# Default 
# =======================
# Default FileLifetime in seconds used for VOLATILE file in case of SRM request without FileLifetime parameter specified.
fileLifetime.default=259200
# Possible values are :   N (Never) and  A (Always)
default.overwrite   = A
# Possible values are  V (Volatile), P (Permanent) and  D (Durable)      
default.storagetype = P       


#############################################
############  TUNING PARAMETERS #############
#############################################
##
## NOTE: 
##  The TUNING PARAMETERS are not managed by YAIM in any case, 
##  so any change must be managed by directly editing this file.
##


# ============================
# BE-private RDBMS
# ============================
persistence.internal-db.connection-pool = true
persistence.internal-db.connection-pool.maxActive = 50
persistence.internal-db.connection-pool.maxWait = 50


# ============================
# ASYNCH SCHEDULER Component parameters
# ============================
scheduler.serial=false
scheduler.crusher.workerCorePoolSize=10
scheduler.crusher.workerMaxPoolSize=50
scheduler.crusher.queueSize=2000
scheduler.chunksched.ptp.workerCorePoolSize=50
scheduler.chunksched.ptp.workerMaxPoolSize=200
scheduler.chunksched.ptp.queueSize=1000
scheduler.chunksched.ptg.workerCorePoolSize=50
scheduler.chunksched.ptg.workerMaxPoolSize=200
scheduler.chunksched.ptg.queueSize=2000
scheduler.chunksched.bol.workerCorePoolSize=50
scheduler.chunksched.bol.workerMaxPoolSize=200
scheduler.chunksched.bol.queueSize=2000
scheduler.chunksched.copy.workerCorePoolSize=10
scheduler.chunksched.copy.workerMaxPoolSize=50
scheduler.chunksched.copy.queueSize=500


# ============================
# ASYNCH PICKER Component parameters
# ============================
asynch.db.ReconnectPeriod=18000
asynch.db.DelayPeriod=30
asynch.PickingInitialDelay=1
# Polling time in seconds for pick up new requests from DB
asynch.PickingTimeInterval=2
asynch.PickingMaxBatchSize=100


# ======================================
# SYNCH CALL Component tuning parameters
# ======================================
synchcall.directoryManager.maxLsEntry=2000


# ============================
# REST Services parameter
# ============================
storm.rest.services.port=<%= @rest_services_port %>
storm.rest.services.maxthreads=<%= @rest_services_max_threads %>
storm.rest.services.max_queue_size=<%= @rest_services_max_queue_size %>


# ============================
# XMLRPC Server parameter
# ============================
synchcall.xmlrpc.unsecureServerPort=<%= @synchcall_xmlrpc_unsecure_server_port %>
synchcall.xmlrpc.maxthread=<%= @synchcall_xmlrpc_maxthread %>
synchcall.xmlrpc.max_queue_size=<%= @synchcall_xmlrpc_max_queue_size %>
synchcall.xmlrpc.security.enabled=<%= @synchcall_xmlrpc_security_enabled %>
synchcall.xmlrpc.security.token=<%= @synchcall_xmlrpc_security_token %>


# =======================
# Pinned Files cleaning parameters
# =======================
# Initial delay in seconds before starting the garbage collector thread
gc.pinnedfiles.cleaning.delay = 10
# Garbage Collector time interval in seconds.
gc.pinnedfiles.cleaning.interval = 300


# ===============================
# TAPE RECALL Component parameter
# ===============================
tape.recalltable.service.param.retry-value=retry-value
tape.recalltable.service.param.status=status
tape.recalltable.service.param.takeover=first


# ============================
# srmCopy parameters
# ============================
proxy.home=/opt/storm/backend/tmp
asynch.srmclient.retrytime=60
asynch.srmclient.timeout=180
asynch.srmclient.sleeptime=5
asynch.srmclient.putdone.sleeptime=1
asynch.srmclient.putdone.timeout=60
asynch.gridftpclient=it.grid.storm.asynch.NaiveGridFTPTransferClient
asynch.srmclient=it.grid.storm.asynch.SRM22Client
# Default PinLifeTime in seconds used by StoRM in case of SrmCOpy operation.
# This value is the one specified in the remote SrmPrepareToGet request.
SRM22Client.PinLifeTime=259200
# Time expressed in millisec.
asynch.srmcopy.gridftp.timeout = 15000


# ===========================
# Garbage Collector parameter
# ===========================
#
# Enable/Disable Garbage Collector
purging=true
#
# Time interval for between two requests in garbage collection. In seconds
purge.interval=600
#
# Number of requests removed at each run. Every run purge max 800 requests in final status 
purge.size=800
#
# Time after that the GC consider a _terminated_ request as garbage
# Default: 21600s (6h)
expired.request.time=21600


# ==========================================================
# Expired-Put-Requests-Agent parameters
# ==========================================================
#
# Transit expired put requests to a final state. A put request is expired if pinLifetime is reached.
# See pinLifetime.default.
#
#Time interval between two agent executions. In seconds
transit.interval = 300
#
#Delay on starting agent. In seconds
transit.delay = 10


# Skip ACL setup for PtG requests
ptg.skip-acl-setup = false

# The caching policy for successful name lookups from the name service.
# The value is specified as integer to indicate the number of seconds to cache the successful lookup.
# A value of -1 indicates "cache forever". The default behavior is to cache forever when a security
# manager is installed, and to cache for an implementation specific period of time, when a security
# manager is not installed.
#
# Default value: 0
#
#networkaddress.cache.ttl=0

# The caching policy for un-successful name lookups from the name service.
# The value is specified as integer to indicate the number of seconds to cache the failure for un-successful lookups.
# A value of 0 indicates "never cache". A value of -1 indicates "cache forever".
#
# Default value: 0
#
#networkaddress.cache.negative.ttl=0